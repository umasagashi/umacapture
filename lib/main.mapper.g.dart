// This file has been generated by the dart_json_mapper package.
// https://github.com/k-paxian/dart-json-mapper
// @dart = 2.12
import 'package:dart_json_mapper/dart_json_mapper.dart' show JsonMapper, JsonMapperAdapter, typeOf;
import 'src/gui/capture.dart' as x0 show AutoCopyMode;
import 'src/preference/platform_config.dart' as x1 show WindowProfile, RecorderConfig, WindowsConfig, PlatformConfig;
// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.


import 'dart:core';
import 'dart:ui' as prefix3;
import 'package:dart_json_mapper/src/model/annotations.dart' as prefix0;
import 'package:umasagashi_app/src/gui/capture.dart' as prefix2;
import 'package:umasagashi_app/src/preference/platform_config.dart' as prefix1;

// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: implementation_imports

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{const prefix0.JsonSerializable(): r.ReflectorData(<m.TypeMirror>[r.NonGenericClassMirrorImpl(r'WindowProfile', r'.WindowProfile', 7, 0, const prefix0.JsonSerializable(), const <int>[0, 1, 2, 13], const <int>[14, 15, 16, 17, 18, 10, 11, 12], const <int>[], -1, {}, {}, {r'': (bool b) => ({windowClass, windowTitle, fixedAspectRatio}) => b ? prefix1.WindowProfile(fixedAspectRatio: fixedAspectRatio, windowClass: windowClass, windowTitle: windowTitle) : null}, -1, 0, const <int>[], const [prefix0.jsonSerializable], null), r.NonGenericClassMirrorImpl(r'RecorderConfig', r'.RecorderConfig', 7, 1, const prefix0.JsonSerializable(), const <int>[3, 4, 5, 22], const <int>[14, 15, 16, 17, 18, 19, 20, 21], const <int>[], -1, {}, {}, {r'': (bool b) => ({windowProfile, recordingFps, minimumSize}) => b ? prefix1.RecorderConfig(minimumSize: minimumSize, recordingFps: recordingFps, windowProfile: windowProfile) : null}, -1, 1, const <int>[], const [prefix0.jsonSerializable], null), r.NonGenericClassMirrorImpl(r'WindowsConfig', r'.WindowsConfig', 7, 2, const prefix0.JsonSerializable(), const <int>[6, 24], const <int>[14, 15, 16, 17, 18, 23], const <int>[], -1, {}, {}, {r'': (bool b) => ({windowRecorder}) => b ? prefix1.WindowsConfig(windowRecorder: windowRecorder) : null}, -1, 2, const <int>[], const [prefix0.jsonSerializable], null), r.NonGenericClassMirrorImpl(r'PlatformConfig', r'.PlatformConfig', 7, 3, const prefix0.JsonSerializable(), const <int>[7, 8, 25, 28], const <int>[14, 15, 16, 17, 18, 25, 26, 27], const <int>[], -1, {}, {}, {r'': (bool b) => ({windowsConfig, directory}) => b ? prefix1.PlatformConfig(directory: directory, windowsConfig: windowsConfig) : null}, -1, 3, const <int>[], const [prefix0.jsonSerializable], null), r.NonGenericClassMirrorImpl(r'AutoCopyMode', r'.AutoCopyMode', 524295, 4, const prefix0.JsonSerializable(), const <int>[29], const <int>[14, 29, 16, 17, 18, 30], const <int>[], -1, {}, {}, {}, -1, 4, const <int>[], const [prefix0.jsonSerializable], null)], <m.DeclarationMirror>[r.VariableMirrorImpl(r'windowClass', 33797, 0, const prefix0.JsonSerializable(), -1, 5, 5, const <int>[], const []), r.VariableMirrorImpl(r'windowTitle', 33797, 0, const prefix0.JsonSerializable(), -1, 5, 5, const <int>[], const []), r.VariableMirrorImpl(r'fixedAspectRatio', 33797, 0, const prefix0.JsonSerializable(), -1, 6, 6, const <int>[], const []), r.VariableMirrorImpl(r'windowProfile', 33797, 1, const prefix0.JsonSerializable(), 0, 0, 0, const <int>[], const []), r.VariableMirrorImpl(r'recordingFps', 33797, 1, const prefix0.JsonSerializable(), -1, 7, 7, const <int>[], const []), r.VariableMirrorImpl(r'minimumSize', 33797, 1, const prefix0.JsonSerializable(), -1, 8, 8, const <int>[], const []), r.VariableMirrorImpl(r'windowRecorder', 33797, 2, const prefix0.JsonSerializable(), 1, 1, 1, const <int>[], const []), r.VariableMirrorImpl(r'windowsConfig', 33797, 3, const prefix0.JsonSerializable(), 2, 2, 2, const <int>[], const []), r.VariableMirrorImpl(r'directory', 33797, 3, const prefix0.JsonSerializable(), -1, 5, 5, const <int>[], const []), r.VariableMirrorImpl(r'index', 33861, 4, const prefix0.JsonSerializable(), -1, 9, 9, const <int>[], const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 0, 10), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 1, 11), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 2, 12), r.MethodMirrorImpl(r'', 128, 0, -1, 0, 0, const <int>[], const <int>[0, 1, 2], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'==', 131074, -1, -1, 10, 10, const <int>[], const <int>[3], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'toString', 131074, -1, -1, 11, 11, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'noSuchMethod', 65538, -1, -1, -1, -1, const <int>[], const <int>[4], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'hashCode', 131075, -1, -1, 9, 9, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'runtimeType', 131075, -1, -1, 12, 12, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 3, 19), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 4, 20), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 5, 21), r.MethodMirrorImpl(r'', 128, 1, -1, 1, 1, const <int>[], const <int>[5, 6, 7], const prefix0.JsonSerializable(), const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 6, 23), r.MethodMirrorImpl(r'', 128, 2, -1, 2, 2, const <int>[], const <int>[8], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'copyWith', 131074, 3, 3, 3, 3, const <int>[], const <int>[9, 10], const prefix0.JsonSerializable(), const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 7, 26), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 8, 27), r.MethodMirrorImpl(r'', 128, 3, -1, 3, 3, const <int>[], const <int>[11, 12], const prefix0.JsonSerializable(), const []), r.MethodMirrorImpl(r'toString', 131138, 4, -1, 11, 11, const <int>[], const <int>[], const prefix0.JsonSerializable(), const []), r.ImplicitGetterMirrorImpl(const prefix0.JsonSerializable(), 9, 30)], <m.ParameterMirror>[r.ParameterMirrorImpl(r'windowClass', 46086, 13, const prefix0.JsonSerializable(), -1, 5, 5, const <int>[], const [], null, #windowClass), r.ParameterMirrorImpl(r'windowTitle', 46086, 13, const prefix0.JsonSerializable(), -1, 5, 5, const <int>[], const [], null, #windowTitle), r.ParameterMirrorImpl(r'fixedAspectRatio', 46086, 13, const prefix0.JsonSerializable(), -1, 6, 6, const <int>[], const [], null, #fixedAspectRatio), r.ParameterMirrorImpl(r'other', 32774, 14, const prefix0.JsonSerializable(), -1, 13, 13, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'invocation', 32774, 16, const prefix0.JsonSerializable(), -1, 14, 14, const <int>[], const [], null, null), r.ParameterMirrorImpl(r'windowProfile', 46086, 22, const prefix0.JsonSerializable(), 0, 0, 0, const <int>[], const [], null, #windowProfile), r.ParameterMirrorImpl(r'recordingFps', 46086, 22, const prefix0.JsonSerializable(), -1, 7, 7, const <int>[], const [], null, #recordingFps), r.ParameterMirrorImpl(r'minimumSize', 46086, 22, const prefix0.JsonSerializable(), -1, 8, 8, const <int>[], const [], null, #minimumSize), r.ParameterMirrorImpl(r'windowRecorder', 46086, 24, const prefix0.JsonSerializable(), 1, 1, 1, const <int>[], const [], null, #windowRecorder), r.ParameterMirrorImpl(r'windowsConfig', 28678, 25, const prefix0.JsonSerializable(), -1, -1, -1, const <int>[], const [], null, #windowsConfig), r.ParameterMirrorImpl(r'directory', 28678, 25, const prefix0.JsonSerializable(), -1, -1, -1, const <int>[], const [], null, #directory), r.ParameterMirrorImpl(r'windowsConfig', 46086, 28, const prefix0.JsonSerializable(), 2, 2, 2, const <int>[], const [], null, #windowsConfig), r.ParameterMirrorImpl(r'directory', 46086, 28, const prefix0.JsonSerializable(), -1, 5, 5, const <int>[], const [], null, #directory)], <Type>[prefix1.WindowProfile, prefix1.RecorderConfig, prefix1.WindowsConfig, prefix1.PlatformConfig, prefix2.AutoCopyMode, String, bool, int, prefix3.Size, int, bool, String, Type, Object, Invocation], 5, {r'==': (dynamic instance) => (x) => instance == x, r'toString': (dynamic instance) => instance.toString, r'noSuchMethod': (dynamic instance) => instance.noSuchMethod, r'hashCode': (dynamic instance) => instance.hashCode, r'runtimeType': (dynamic instance) => instance.runtimeType, r'windowClass': (dynamic instance) => instance.windowClass, r'windowTitle': (dynamic instance) => instance.windowTitle, r'fixedAspectRatio': (dynamic instance) => instance.fixedAspectRatio, r'windowProfile': (dynamic instance) => instance.windowProfile, r'recordingFps': (dynamic instance) => instance.recordingFps, r'minimumSize': (dynamic instance) => instance.minimumSize, r'windowRecorder': (dynamic instance) => instance.windowRecorder, r'copyWith': (dynamic instance) => instance.copyWith, r'windowsConfig': (dynamic instance) => instance.windowsConfig, r'directory': (dynamic instance) => instance.directory, r'index': (dynamic instance) => instance.index}, {}, null, [])};


final _memberSymbolMap = null;

void _initializeReflectable(JsonMapperAdapter adapter) {
  if (!adapter.isGenerated) {
    return;
  }
  r.data = adapter.reflectableData!;
  r.memberSymbolMap = adapter.memberSymbolMap;
}

final mainGeneratedAdapter = JsonMapperAdapter(
  title: 'Main Generated Adapter',
  url: 'package:umasagashi_app/main.dart',
  reflectableData: _data,
  memberSymbolMap: _memberSymbolMap,
  valueDecorators: {
    typeOf<List<x0.AutoCopyMode>>(): (value) => value.cast<x0.AutoCopyMode>(),
    typeOf<Set<x0.AutoCopyMode>>(): (value) => value.cast<x0.AutoCopyMode>(),
    typeOf<List<x1.WindowProfile>>(): (value) => value.cast<x1.WindowProfile>(),
    typeOf<Set<x1.WindowProfile>>(): (value) => value.cast<x1.WindowProfile>(),
    typeOf<List<x1.RecorderConfig>>(): (value) => value.cast<x1.RecorderConfig>(),
    typeOf<Set<x1.RecorderConfig>>(): (value) => value.cast<x1.RecorderConfig>(),
    typeOf<List<x1.WindowsConfig>>(): (value) => value.cast<x1.WindowsConfig>(),
    typeOf<Set<x1.WindowsConfig>>(): (value) => value.cast<x1.WindowsConfig>(),
    typeOf<List<x1.PlatformConfig>>(): (value) => value.cast<x1.PlatformConfig>(),
    typeOf<Set<x1.PlatformConfig>>(): (value) => value.cast<x1.PlatformConfig>()
},
  enumValues: {
    x0.AutoCopyMode: x0.AutoCopyMode.values
});

Future<JsonMapper> initializeJsonMapperAsync({Iterable<JsonMapperAdapter> adapters = const []}) => Future(() => initializeJsonMapper(adapters: adapters));

JsonMapper initializeJsonMapper({Iterable<JsonMapperAdapter> adapters = const []}) {
  JsonMapper.enumerateAdapters([...adapters, mainGeneratedAdapter], (JsonMapperAdapter adapter) {
    _initializeReflectable(adapter);
    JsonMapper().useAdapter(adapter);
  });
  return JsonMapper();
}